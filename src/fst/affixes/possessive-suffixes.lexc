! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2015 The University of Tromsø 
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@uit.no or feedback@divvun.no

!! # Possessive suffixes for Inari Saami
!     ========

!! We generate PxSg1, PxDu1, PxPl1, etc, despite there being no difference
!! between these in smn, due to MT purposes. An alternative would be to
!! just do Px1, Px2, Px3, and change tags from sme to smn in apertium.

!LEXICON CPXsuffnom ! not in use
!+PxSg1:âm Px_K ; ! Nom only
!CPXsuffrest ;

! cons-final stem

LEXICON CPXsuff  !!≈ * **@CODE@**
+PxSg1:%>ân Px_K ; ! All other cases
+PxSg1+Err/Orth:%>âm Px_K ; ! korpusas
+PxSg2:%>âd Px_K ;
+PxSg3:%>is Px_K ;
+PxDu1:%>ân Px_K ;
+PxDu2:%>âd Px_K ;
+PxDu3:%>is Px_K ;
+PxPl1:%>ân Px_K ;
+PxPl2:%>âd Px_K ;
+PxPl3:%>is Px_K ;



! vowel-final stem

LEXICON VPXsuff  !!≈ * **@CODE@** -n, -d, -s
VPXsuff12 ; ! -n, d
VPXsuff3 ;  ! -s


LEXICON VPXsuff12  !!≈ * **@CODE@**
VPXsuff1 ;
VPXsuff2 ; ! 2 person, all cases


LEXICON VPXsuff12nom  !!≈ * **@CODE@**  -m/-n, -d, -s
VPXsuff1nom ;
VPXsuff2 ;

LEXICON VPXsuff1nom
+PxSg1:%>m Px_K ; ! algam
+PxDu1:%>m Px_K ; !
+PxPl1:%>m Px_K ; !


LEXICON VPXsuff1 !!≈ * **@CODE@**
+PxSg1:%>n Px_K ; !
+PxSg1+Err/Orth:%>m Px_K ; ! korpusas
+PxDu1:%>n Px_K ; !
+PxPl1:%>n Px_K ; !

LEXICON VPXsuff2 !!≈ * **@CODE@**
+PxSg2:%>d Px_K ; !
+PxDu2:%>d Px_K ; !
+PxPl2:%>d Px_K ; !




LEXICON VPXsuff3  !!≈ * **@CODE@**
+PxSg3:%>s Px_K ;
+PxDu3:%>s Px_K ;
+PxPl3:%>s Px_K ;

LEXICON CPXsuffCOM  !!≈ * **@CODE@**
+PxSg1:ânguin Px_K ;
+PxSg1+Err/Orth:ângijn Px_K ;
+PxDu1:ânguin Px_K ;
+PxDu1+Err/Orth:ângijn Px_K ;
+PxPl1:ânguin Px_K ;
+PxPl1+Err/Orth:ângijn Px_K ;

+PxSg2:âdguin Px_K ;  !!≈ * **@CODE@**
+PxSg2+Err/Orth:âdgijn Px_K ;
+PxDu2:âdguin Px_K ;
+PxDu2+Err/Orth:âdgijn Px_K ;
+PxPl2:âdguin Px_K ;
+PxPl2+Err/Orth:âdgijn Px_K ;

+PxSg3:iskuin Px_K ;  !!≈ * **@CODE@**
+PxSg3+Err/Orth:iskijn Px_K ;
+PxDu3:iskuin Px_K ;
+PxDu3+Err/Orth:iskijn Px_K ;
+PxPl3:iskuin Px_K ;
+PxPl3+Err/Orth:iskijn Px_K ;

LEXICON Px_K  !!≈ * **@CODE@**
@R.Px.add@ K ;

