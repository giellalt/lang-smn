! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@hum.uit.no or feedback@divvun.no

! ========================================================================== !
!!               !!!Inari Sámi morphological analyser
! ========================================================================== !


Multichar_Symbols  !!≈ !!!@CODE@ definitions

!! !!Parts of speech
 +N +A +Adv +V					  !!= * @CODE@
 +Pron +CS +CC					  !!= * @CODE@
 +Adp +Po +Pr 					  !!= * @CODE@
 +Interj +Pcle					  !!= * @CODE@
 +Num +ABBR         !!= * @CODE@
 +Symbol !!≈ * @CODE@ = independent symbols in the text stream, like £, €, ©

 
!! !Tags for sub-POS
 +Prop      !!= * __@CODE@__ - Propernoun
 +Pers      !!= * __@CODE@__ - Personal Pronoun
 +Dem       !!= * __@CODE@__ - Demonstrative Pronoun
 +Interr    !!= * __@CODE@__ - Interrogative Pronoun
 +Refl      !!= * __@CODE@__ - Reflexive Pronoun
 +Recipr    !!= * __@CODE@__ - Reciprocal Pronoun
 +Rel       !!= * __@CODE@__ - Relative Pronoun
 +Indef     !!= * __@CODE@__ - Indefinitive Pronoun
 +Coll      !!= * __@CODE@__ - Collective numerals, subtag for +N
 +Arab      !!= * __@CODE@__ - Arabic numeral, subtag for +Num
 +Rom       !!= * __@CODE@__ - Roman numeral, subtag for +Num
 +ACR       !!≈ * __@CODE@__ - Acronym
 +Dyn       !!≈ * __@CODE@__ - Dynamic Acronym
 +NomAg
 +Ord

!! !!Grammatical properties

 +IV +TV			  !!= * @CODE@


!! !Person - number
 +Sg +Pl +Du						  !!= * @CODE@

 +Sg1 +Sg2 +Sg3 				  !!= * @CODE@
 +Du1 +Du2 +Du3 				  !!= * @CODE@
 +Pl1 +Pl2 +Pl3					  !!= * @CODE@

 +PxSg1 +PxSg2 +PxSg3 			  !!= * @CODE@
 +PxDu1 +PxDu2 +PxDu3 			  !!= * @CODE@
 +PxPl1 +PxPl2 +PxPl3 			  !!= * @CODE@

!! !Case
 +Nom +Gen +Acc 				  !!= * @CODE@
 +Ill +Ine +Ela 				  !!= * @CODE@
 +Com +Ess +Par +Abe 			  !!= * @CODE@
 +Loc                			  !!= * @CODE@


 +Known !!= * @CODE@ mon , till we found a better tag

!! !Adjectival forms
 +Comp +Superl 			  !!= * @CODE@
 +Attr				  !!= * @CODE@

!! !Adverb types 
 
 +Spat	   !!= * @CODE@	Spatial adverbs
 +Temp	   !!= * @CODE@ Temporal adverbs


!! !Tense - mood
 +Ind +Pot +Cond +Imprt +ImprtII  !!= * @CODE@
 +Prs +Prt						  !!= * @CODE@
 +Opt

!! !Indefinite verb forms
 +Pass +Sup						  !!= * @CODE@
 +Inf +Ger +GerII 				  !!= * @CODE@
 +ConNeg +Neg 					  !!= * @CODE@
 +PrsPrc +PrfPrc 				  !!= * @CODE@
 +VGen +VAbess					  !!= * @CODE@
 +Actio					  !!= * @CODE@

! Der#begin
!! {{{
! Derivation position in a derivation row:  Affix and
! 1              2            3            4             POS type
+Der1          +Der2        +Der3		+Der4

! Der#1
+Der/t                                                   ! NA (XXX check and remove)
+Der/Dimin                                               ! NN (was: Der/aš & Der/š)
+Der/lasj                                                ! NA
+Der/d                                                   ! VV
+Der/tt                                                   ! VV - Causative čälittiđ
+Der/Caus                                                ! VV - 3-syll causatives
+Der/l                                                   ! VV
+Der/st                                                  ! VV čälistiđ
+Der/Car                                                 ! NA * +Der1+Der2 - can only combine with Der3 caritive: peljittem
+Der/laakan                                               ! AA * +Der1+Der2 - can only combine with Der3
+Der/Pass                                               ! VV -  passive
! Der#2
              +Der/NomAg
              +Der/NomAct                                ! VN Der/NomAct har to realisasjonar, med ulike restriksjonar,
			  +Der/sasj                                                 ! NA
              +Der/alla                                  ! VV
              +Der/adda                                  ! VV
              +Der/AAdv                                    ! adverb pyeremusávt pyeremusâht
              +Der/taa                                    ! adverb pyeremustáá !This is not the best tag?
! Der#3                    
                           +Der/vuota                   ! AN
! Der#4                                                            
                                        +Der/InchL      ! VV
!                                       +Der/NomAct      ! VN Der/NomAct har to realisasjonar, med ulike restriksjonar,
                                                         !    this is previous Der/n. This realisation is Der4.
                                                         !    Outcommented to not define the tag twice, but kept
                                                         !    here for documentation purposes.
                                        +Der/upmi        ! VN
                                        +Der/mas         ! VN
!! }}}
! Der#end


!! All non-positional derivations should be preceded by this tag, to make it possible
!! to target regular expressions at all derivations in a language-independent way:
!! just specify +Der|+Der1 .. +Der5 and you are set.

+Der  !!≈ * @CODE@

 
!! !Derivations
!! !Other/unclassified derivations, can appear in all positions:


 +Der/ag !!= * @CODE@ neeljičievâg neeljijienâg kuulmâloonjâg neeljičievâg neeljijienâg
 +Der/ahasas                    !!= * @CODE@ 85-ahasâš škovlâahasâš
 +Der/ivvaas                  !!= * @CODE@
 +Der/vualasas                    !!= * @CODE@ tutkâmvuálásâš

!! !Clitics
 +Qst 
 +Foc       				  !!= * @CODE@
 +Foc/ba        !!= * @CODE@ 
 +Foc/baa       !!= * @CODE@ 
 +Foc/baan      !!= * @CODE@ 
 +Foc/ban       !!= * @CODE@ 
 +Foc/gan       !!= * @CODE@ 
 +Foc/gas       !!= * @CODE@ 
 +Foc/ge        !!= * @CODE@ 
 +Foc/ges       !!= * @CODE@ 
 +Foc/gin       !!= * @CODE@ 
 +Foc/gis       !!= * @CODE@ 
 +Foc/go        !!= * @CODE@ 
 +Foc/han       !!= * @CODE@ 
 +Foc/kas       !!= * @CODE@ 
 +Foc/kin       !!= * @CODE@ 
 +Foc/kis       !!= * @CODE@ 
 +Foc/nii       !!= * @CODE@ 
 +Foc/pa        !!= * @CODE@ 
 +Foc/sun       !!= * @CODE@ 
 +Foc/uv       !!= * @CODE@ 

!! !Usage tags

 +Err/Orth        !!= * __@CODE@__ substandard, not in normative fst
 +Err/Lex         !!= * __@CODE@__ substandard, not in normative fst, no normative lemma
 +Err/Hyph        !!= * __@CODE@__ substandard, not in normative fst
 +Err/SpaceCmp        !!= * __@CODE@__ substandard, not in normative fst
 +MWE             !!= * __@CODE@__ - MultiWord Expression, used for abbreviation extraction for preprocess.sh
 +Use/-PLX        !!= * __@CODE@__ - do not include in Polderland spellers (most likely irrelevant for smn)
 +Use/-Spell      !!= * __@CODE@__ - do not include in speller (even though the entry is formally correct)
 +Use/SpellNoSugg !!= * __@CODE@__ - Recognized, but not suggested in speller 

!! !!Semantic tags
+Sem/Atr	               !!= * @CODE@
+Sem/Mal 
+Sem/Fem 
+Sem/Sur                !!= * @CODE@
+Sem/Plc 
+Sem/Org 
+Sem/Obj 
+Sem/Obj-el     !!= * @CODE@           
+Sem/Measr 
+Sem/Money 
+Sem/Veh 
+Sem/Year  !!= * @CODE@
+Sem/Act
+Sem/Act_Fruit
+Sem/Act_Plc
+Sem/Act_Route
+Sem/Act_Tool-it
+Sem/Amount
+Sem/Amount_Semcon
+Sem/Ani 
+Sem/Ani-bird	! Bird names
+Sem/Ani-fish	! Fish names
+Sem/Ani_Body-abstr_Hum
+Sem/Ani_Build-part
+Sem/Ani_Group
+Sem/Ani_Group_Hum
+Sem/Ani_Group_Prod-vis
+Sem/Ani_Hum
+Sem/Ani_Veh
+Sem/Aniprod
+Sem/Aniprod_Hum
+Sem/Aniprod_Obj-clo
+Sem/Aniprod_Perc-phys
+Sem/Aniprod_Plc_Route
+Sem/Body-abstr
+Sem/Body-abstr_Feat-psych
+Sem/Body-abstr_Prod-audio_Semcon
+Sem/Body_Food
+Sem/Body_Hum
+Sem/Body_Mat
+Sem/Body_Measr
+Sem/Body_Plc
+Sem/Body_Plc-elevate
+Sem/Build
+Sem/Build-part
+Sem/Build-part_Cat_Ctain_Mat
+Sem/Build-part_Ctain_Obj
+Sem/Build_Edu_Org
+Sem/Build_Org
+Sem/Cat
+Sem/Clth
+Sem/Clth-jewl
+Sem/Clth-jewl_Curr
+Sem/Clth-part
+Sem/Ctain
+Sem/Ctain-abstr
+Sem/Ctain-clth
+Sem/Ctain-clth_Veh
+Sem/Ctain_Furn
+Sem/Ctain_Tool
+Sem/Curr
+Sem/Dance
+Sem/Date
+Sem/Dir
+Sem/Domain
+Sem/Domain_Prod-audio
+Sem/Drink
+Sem/Drink_Plant
+Sem/Dummytag
+Sem/Edu
+Sem/Edu_Event
+Sem/Edu_Geom
+Sem/Edu_Mat
+Sem/Edu_Org
+Sem/Event
+Sem/Event_Food
+Sem/Event_Plc
+Sem/Event_Time
+Sem/Feat
+Sem/Feat-measr
+Sem/Feat-measr_Plc
+Sem/Feat-phys
+Sem/Feat-phys_Tool-write
+Sem/Feat-phys_Veh
+Sem/Feat-phys_Wthr
+Sem/Feat-psych
+Sem/Feat-psych_Plc
+Sem/Feat_Plant
+Sem/Food
+Sem/Food-med
+Sem/Food_Plant
+Sem/Fruit
+Sem/Fruit_Hum
+Sem/Plant-fungus	! Fungi names
+Sem/Furn
+Sem/Game_Obj-play
+Sem/Geom
+Sem/Geom_Obj
+Sem/Group_Hum
+Sem/Group_Hum_Org
+Sem/Group_Hum_Plc
+Sem/Group_Txt
+Sem/Hum
+Sem/Hum_Lang
+Sem/Hum_Lang_Plc
+Sem/Hum_Mat_Tool
+Sem/Hum_Obj
+Sem/Hum_Org
+Sem/Hum_Plc
+Sem/Hum_Veh
+Sem/Ideol
+Sem/Lang ! Languages
+Sem/Lang_Tool
+Sem/Mat
+Sem/Mat_Plant
+Sem/Mat_Txt
+Sem/Measr_Sign
+Sem/Measr_Time
+Sem/Money_Obj
+Sem/Money_Txt
+Sem/Obj-clo
+Sem/Obj-ling
+Sem/Obj-play
+Sem/Obj-rope
+Sem/Obj-surfc
+Sem/Obj_Semcon
+Sem/Obj_State
+Sem/Obj_Veh
+Sem/Org_Prod-cogn
+Sem/Org_Rule
+Sem/Org_Txt
+Sem/Org_Prod-audio
+Sem/Org_Prod-vis
+Sem/Part
+Sem/Perc-cogn
+Sem/Perc-emo
+Sem/Perc-phys
+Sem/Plant ! Plant names
+Sem/Plant-part
+Sem/Plant_Plant-part
+Sem/Plc-abstr
+Sem/Plc-abstr_Rel_State
+Sem/Plc-abstr_Route
+Sem/Plc-elevate
+Sem/Plc-line
+Sem/Plc-water
+Sem/Plc_Route
+Sem/Plc_Substnc
+Sem/Plc_Substnc_Wthr
+Sem/Plc_Time
+Sem/Plc_Tool-catch
+Sem/Plc_Txt
+Sem/Plc_Wthr
+Sem/Pos
+Sem/Process
+Sem/Prod
+Sem/Prod-audio
+Sem/Prod-audio_Txt
+Sem/Prod-cogn
+Sem/Prod-cogn_Txt
+Sem/Prod-ling
+Sem/Prod-vis
+Sem/Rel
+Sem/Route
+Sem/Rule
+Sem/Semcon
+Sem/Semcon_Txt
+Sem/Sign
+Sem/State
+Sem/State-sick
+Sem/Substnc
+Sem/Substnc_Wthr
+Sem/Time
+Sem/Time-clock
+Sem/Time_Wthr
+Sem/Tool
+Sem/Tool-catch
+Sem/Tool-clean
+Sem/Tool-it
+Sem/Tool-measr
+Sem/Tool-music
+Sem/Tool-write
+Sem/Txt
+Sem/Wpn
+Sem/Wthr

 
!! !!Punctuation

 +CLB +PUNCT +HYPH         !!= * @CODE@
 +PAR +LEFT +RIGHT         !!= * @CODE@

 +URL          !!= * @CODE@
 
!! !!Morphophonemes

!^P ^K ^Č ^H ^T       for pp:v etc. gradation These are not in use

! m7 n7 ŋ7 v7 s7 š7 r7 đ7 j7 l7 h7 '7   these are the dotted ones
 k4 l4 t4 p4 c4 t4 č4  !!= * @CODE@  = these are consonants that change in cg
 b6 d6 g6   !!= * @CODE@  = these are consonants that change in clitics: jiemge, epke
 '7 !!= * @CODE@ 
 i4   i6             !!= * @CODE@ = this is the postvocalic i consonant, realised as i
 i6  j6            !!= * @CODE@ = these are fake vowel and consonant, to get rules to function for exeptions
 i5				!!= * @CODE@ = comitative suffix-begin in loanwords
 a5 ä5 á5 e5 u5 o5  !!= * @CODE@  these vowels do not change
 h5 j5 m5 ŋ5 t5 c5 d5 l5 t5 r5 č5 k5 z5  !!= * @CODE@  these consonants do not change in WG
 y5                  !!= * @CODE@  these vowels do not change, e.g. pyerá
 i2  u2 i3 â2     !!= * @CODE@  stemvowel changing to e, e.g. kyeli:kyeˊle 
 ∑   !!= * @CODE@ used for dynamic compounds, Capital Greek Sigma, Alt-Shift-S
 
!! !Archiphonemes

^RC   !!= * @CODE@  Root consonant dummy
^RV   !!= * @CODE@  Root vowel dummy
^SC   !!= * @CODE@  Suffix consonant dummy
^SV   !!= * @CODE@  Suffix vowel dummy
^VO    !!= * @CODE@ = vowel copy

!! !Triggers

^CLEN !!= * @CODE@  Consonant lengthening in qual WG
^CSH  !!= * @CODE@  Consonant shortening (not WG)
^FCD  !!= * @CODE@  Final consonant deletion
^FVD  !!= * @CODE@  Final vowel deletion
^EA    !!= * @CODE@ is á and root vowel change in Ill Sg of i-stems
^EX    !!= * @CODE@ = Stem vowel: i to â where it should have been á, this is Err/Orth only      
^RLEN !!= * @CODE@  Root vowel lengthening (impl. WG)
^RVSH !!= * @CODE@  Root vow shortening
^SLEN !!= * @CODE@  Suffix vowel lengthening 
^SVLOW !!= * @CODE@  Suffix vowel lowering â > á and u > o
^SVSH !!= * @CODE@  Second syllable vowel shortening
^VLOW   !!= * @CODE@ is Vowel lowering in 3rd sg of contract verbs tuhhid:tohhe
^WG   !!= * @CODE@  Weak grade trigger
^ÁE     !!= * @CODE@ á->e
^ÁI     !!= * @CODE@ á->i
^VHIGH !!= * @CODE@ = hightening of vowels for verbs o to uu, a to oo
^VBACK   !!= * @CODE@ = back vowels for verbs, ä to a (when needed, normally 2syll a|â is enough
^IUML      !!= * @CODE@ =  â to e in front of high suffixes 
^BLOCK   !!= * @CODE@ = This symbol just to block otherwise triggering contexts

!! !!Symbols that need to be escaped on the lower side (towards twolc):
 »7     ! »
 «7     ! «
 %[%>%] ! >
 %[%<%] ! <

 +Use/NG    ! not-generate, for ped generation isme-ped.fst
 +Use/MT    ! generate only for MT 
 +Use/Circ
 +Use/-PMatch
 
!! !!Variants
+v1
+v2
+v3
+v4
+Hom1
+Hom2
+Allegro		


!! !!Semantic tags

+Sem/Body !!= * @CODE@ denotes bodyparts
+Sem/Plc !!= * @CODE@ denotes places

!! !!Compound tags

!! !These tags describe the parts of the compound.

!! The prefix (before "/") is __Cmp__.

+Cmp !!= * @CODE@ compounds
+Cmp/Hyph !!= * @CODE@ compounds

+Cmp/SgNom !!= * @CODE@ compounds
+Cmp/PlNom !!= * @CODE@ compounds
+Cmp/Attr !!= * @CODE@ compounds
+Cmp/SgGen !!= * @CODE@ compounds
+Cmp/PlGen !!= * @CODE@ compounds
+Cmp/SplitR !!= * @CODE@ compounds
+Cmp/Sh !!= * @CODE@ compounds

!! !These tags govern the parts of the compound

!! The prefix (before "/") is __CmpNP__:
!! (meaning: this is the normative position of thus tag)

+CmpNP/All       !!≈ * __@CODE@__ - ... in all positions, __default__, this tag does not have to be written
+CmpNP/First     !!≈ * __@CODE@__ - ... only be first part in a compound or alone
+CmpNP/Pref      !!≈ * __@CODE@__ - ... only __first__ part in a compound, NEVER alone
+CmpNP/Last      !!≈ * __@CODE@__ - ... only be last part in a compound or alone
+CmpNP/Suff      !!≈ * __@CODE@__ - ... only __last__ part in a compound, NEVER alone
+CmpNP/None      !!≈ * __@CODE@__ - ... does not take part in compounds
+CmpNP/Only      !!≈ * __@CODE@__ - ... only be part of a compound, i.e. can never
                 !!                     be used alone, but can appear in any position

!! The prefix (before "/") is __CmpN__:
!! (meaning: this is the normative position of thus tag)
!! The tagged part of the compound should make a compound using:

+CmpN/SgN      !!≈ * __@CODE@__ Singular Nominative
+CmpN/SgG      !!≈ * __@CODE@__ Singular Genitive
+CmpN/PlG      !!≈ * __@CODE@__ Plural Genitive

!! Unmarked = Default, ie {{+CmpN/SgN}} for SMN.

!! The second part of the compound may require that the previous (left part) is:

+CmpN/SgNomLeft  !!≈ * __@CODE@__ Singular Nominative
+CmpN/SgGenLeft  !!≈ * __@CODE@__ Singular Genitive
+CmpN/PlGenLeft  !!≈ * __@CODE@__ Plural Genitive



!! !!Language tagged names

+OLang/ENG  		  !!= * @CODE@
+OLang/FIN  		  !!= * @CODE@
+OLang/NNO  		  !!= * @CODE@
+OLang/NOB  		  !!= * @CODE@
+OLang/SME  		  !!= * @CODE@
+OLang/SMA  		  !!= * @CODE@
+OLang/SWE  		  !!= * @CODE@
+OLang/UND  		  !!= * @CODE@
+OLang/RUS  		  !!= * @CODE@


!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @R.NeedNoun.ON@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpPref.TRUE@  !!≈ | @CODE@ | Block such words from entering ENDLEX
 @P.CmpPref.FALSE@ !!≈ | @CODE@ | Block these words from making further compounds
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @U.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the two previous ones to block compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
 @D.CmpHyph.TRUE@  !!≈ | @CODE@ | Flag to control hyphenated compounds like proper nouns
 @U.CmpHyph.FALSE@ !!≈ | @CODE@ | Flag to control hyphenated compounds like proper nouns
 @U.CmpHyph.TRUE@  !!≈ | @CODE@ | Flag to control hyphenated compounds like proper nouns
 @C.CmpHyph@       !!≈ | @CODE@ | Flag to control hyphenated compounds like proper nouns
 @P.CmpHyph.TRUE@  !!≈ | @CODE@ | Flag to control hyphenated compounds like proper nouns
 @N.CmpHyph.TRUE@  !!≈ | @CODE@ | Flag to control hyphenated compounds like proper nouns

!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.

! @P.Need3Part.ON@ @D.Need3Part.ON@ @C.Need3Part@ !3Part

@U.NeedsVowRed.OFF@ !!≈ * @CODE@ is used to force hyphenation/non-reduction: samediggi-
@U.NeedsVowRed.ON@  !!≈ * @CODE@ is used to force reduction w/o hyphen: samedigge#xxx
@C.NeedsVowRed@     !!≈ * @CODE@ Clearing this feature, so that it doesn't interfere with further compounding

@P.Px.add@	    !!≈ * @CODE@
@R.Px.add@	    !!≈ * @CODE@
@P.Px.block@    !!≈ * @CODE@
@D.Px.block@    !!≈ * @CODE@
@P.Nom3Px.add@ !!≈ * @CODE@
@R.Nom3Px.add@ !!≈ * @CODE@
@P.Vgen.add@   !!≈ * @CODE@
@R.Vgen.add@   !!≈ * @CODE@


@R.SpellRlx.ON@ !!≈ * @CODE@ Flag used to tag spell-relax-analysed strings (and only those).
@D.SpellRlx.ON@ !!≈ * @CODE@ Flag used to tag spell-relax-analysed strings (and only those).
@C.SpellRlx@    !!≈ * @CODE@ Flag used to tag spell-relax-analysed strings (and only those).

@R.SpaceCmp.ON@ !!≈ * @CODE@ Flag to tag compounds written with a space
@D.SpaceCmp.ON@ !!≈ * @CODE@ Flag to tag compounds written with a space
@C.SpaceCmp@    !!≈ * @CODE@ Flag to tag compounds written with a space


! =================================================
!! !!!Basic lexica, pointing to the other lexicon files
! =================================================

LEXICON Root   !!= @CODE@
 @U.Cap.Obl@ ProperNoun ; ! propernouns, always uppercase
 @U.Cap.Opt@ ProperNoun ; ! propernouns, downcased for derivations: aanaarlâš
! ProperNoun-smi-nocomp ;
! ProperNoun ;
 NounRoot ;
 AdjectiveRoot ;
 VerbRoot ;
 Adverb ;
 Particle ;
 Subjunction ;
 Conjunction ;
 Adposition ;
 Interjection ;
 Pronoun ;
 Numeral ;
 Acronym ;
 Punctuation ;
 Symbols     ;
 Abbreviation ;


LEXICON Acronym   !!= * __@CODE@__
Acronym-smi ;
Acronym-smn ;



LEXICON ProperNoun   !!= * __@CODE@__ 
 Prefix-Proper ;
 ProperNoun-smn ; 
@N.CmpHyph.TRUE@ ProperNoun-smi-nocomp ; ! Lexicon for short names - always require hyphen
 ProperNoun-smi ;
! ProperNoun-smi-nocomp ;



LEXICON ENDLEX
!! !!!Lexicon @LEXNAME@
!! And this is the @LEXNAME@ of everything:
!! {{{
   @D.CmpOnly.FALSE@@D.CmpPref.TRUE@@D.NeedNoun.ON@ # ; !!≈ @CODE@
! @D.Need3Part.ON@ # ; !3part
!! }}}
!! The {{@D.CmpOnly.FALSE@}} flag diacritic is ued to disallow words tagged
!! with +CmpNP/Only to end here.
!! The {{@D.NeedNoun.ON@}} flag diacritic is used to block illegal compounds.
