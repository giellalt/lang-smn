! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@hum.uit.no or divvun@samediggi.no

!! !!!Alphabet 

Alphabet   

!! !!The Inari Saami letters

 a á â ä b c d e f g h i j k l m n o õ p q !!= * @CODE@
! â:a â:á
 r s t u v w x y z æ ä ø ö å			   !!= * @CODE@
 č đ ŋ ŧ š ž				 			   !!= * @CODE@

 A Á Â Å B C D E F G H I J K L M N O Õ P Q !!= * @CODE@
 R S T U V W X Y Z Æ Ä Ø Ö Å 			   !!= * @CODE@
 Č Đ Ŋ Ŧ Š Ž  							   !!= * @CODE@
 ˊ  %- 							   !!= * @CODE@
 ':0   !!= @CODE@ this to zero

!! !Accented letters, just in case

 É Ó Ú Í À È Ò Ù Ì Ë Ü Ï Ê Ô Û Î Ã Ý þ Ð   !!= * @CODE@
 é ó ú í à è ò ù ì ë ü ï ê ô û î ã ý þ ð   !!= * @CODE@
 ß ª ß ç								   !!= * @CODE@

 
 
!! Literal quotes and angles must be escaped (cf morpheme boundaries further down):
 »7     !! * »
 «7     !! * «
 %[%>%] !! * >
 %[%<%] !! * <



!! !Different archiphonemes

p4:p                                  !!= * @CODE@ pääpp4ir these are consonants that do not change in cg
k4:k č4:č r4:r l4:l h4:h t4:t         !!= * @CODE@  these are consonants that do not change in cg
i4:i                                  !!= * @CODE@  this is the underlying i consonant
m7:ṃ n7:ṇ ŋ7:ŋ̣ s7:ṣ r7:ṛ đ7:đ̣ l7:ḷ    !!= * @CODE@  with dots
j7:j̣ h7:ḥ š7:ṣ̌  v7:ṿ                  !!= * @CODE@  with dots
!h:ṿ č:j̣  
%^A:á 	           		              !!= * @CODE@ loddán but algan, default is á.


!! !More abstract archiphonemes

%^A:0		!!= * @CODE@ = algan lodán
%^RC:0		!!= * @CODE@ = root consonant
%^RD:0		!!= * @CODE@ = root diphtong
%^RV:0	 	!!= * @CODE@ = root vowel
%^SC:0      !!= * @CODE@ = suffix consonant
%^SV:0 		!!= * @CODE@ = stem vowel

!! !Triggers

%^CLEN:0	!!= * @CODE@ = cons lengthening
%^CSH:0     !!= * @CODE@ = cons shortening
%^DLEN:0    !!= * @CODE@ = Diphtong lengthening
%^DSH:0     !!= * @CODE@ = Diphtong shortening
%^EE:0      !!= * @CODE@ = Final vowel deletion in ee stems
%^FCD:0     !!= * @CODE@ = Final consonant deletion
%^IA:0      !!= * @CODE@ = i to á (more)
%^ILL:0 	!!= * @CODE@ = e to a/á in ill etc
%^LLEN:0    !!= * @CODE@ = low vow lengthening
%^MONO:0    !!= * @CODE@  monophtongization of diphthongs
%^ODDC:0	!!= * @CODE@ = shorten cns in odd-syll stems before C, #
%^ODDSHV:0	!!= * @CODE@ = Cns shortening in C|# and shortvow in Inf etc
%^RVD:0		!!= * @CODE@ = root vowel  diftongisation
%^RLEN:0    !!= * @CODE@ = root lengthening
%^RVL:0     !!= * @CODE@ = root vow length
%^RVSH:0	!!= * @CODE@ = root vow shortening
%^SLEN:0    !!= * @CODE@ = stem vowel lengthening
%^SFV:0   	!!= * @CODE@ = Deleting fleeting vowel before suffix
%^SVF:0	    !!= * @CODE@ = stem vowel lowering â>á and u>o
%^SVLOW:0	!!= * @CODE@ = stem vowel lowering â>á and u>o
%^
%^UU:0      !!= * @CODE@ = Final vowel deletion in uu stems
%^VLOW:0   	!!= * @CODE@ = Vowel lowering in 3rd sg of contract verbs tuhhid:tohhe
%^WG:0 		!!= * @CODE@ = weak grade trigger
%^ÁE:0      !!= * @CODE@ = á to e (more)
%^ÁI:0      !!= * @CODE@ = á to i (more)
%^WCLEN:0     !!= * @CODE@ = weak grade and consonant lengthening
!! !!Morpheme boundaries:

!! Here we define the suffix border >
!! The other borders are not used yet, but still defined:

 «  !!≈ ;@CODE@: Derivational prefix
 »  !!≈ ;@CODE@: Derivational suffix
 %< !!≈ ;@CODE@: Inflectional prefx
 %> !!≈ ;@CODE@: Inflectional suffix
 %^ !!≈ ;@CODE@: (exceptional) soft hyphenation point
 #  !! and the symbol #, which is Word boundary for both lexicalised and dynamic compounds

!! End of alphabet definitions

;

!! !!! Sets

Sets
 Vow = a á â ä e i o u y æ ø ö å			   !!= * @CODE@ 
       é ó ú í à è ò ù ì ë ü ï ê ô û î ã ý 	   !!= @CODE@ 
       A Á Â Ä E I O U Y Æ Ø Ö Å			   !!= @CODE@ 
       É Ó Ú Í À È Ò Ú Ì Ë Ü Ï Ê Ô Û Î Ã Ý 	   !!= @CODE@ 
       ¥ %^RV %^RD %^SV ;					   !!= @CODE@ 
 Cns = b c č d đ f g h j k l m n ŋ 			   !!= * @CODE@ 
       p q r s š t ŧ v w x z ž				   !!= @CODE@ 
       B C Č D Đ F G H J K L M N Ŋ			   !!= @CODE@ 
       P Q R S Š T Ŧ V W X Z Ž 				   !!= @CODE@ 
       ht g2 k2 m2 n2 							   !!= @CODE@ 
       b3 d3 g3 m3 h3 						   !!= @CODE@ 
       p4 k4 č4 r4 l4 h4 t4 i4                        !!= * @CODE@
       m7 n7 ŋ7 v7 s7 r7 đ7	l7 j7 h7 š7		   !!= @CODE@ 
       ṃ  ṇ  ŋ̣  ṿ  ṣ  ṛ  đ̣  ḷ  j̣  ḥ  ṣ̌         !!= * @CODE@
       %^RC %^RD %^SC ;
 Geminate = b d g p t k c č f z ž l m n ŋ r s š v ;
 Seg = Vow Cns ;							   !!= * @CODE@ 
 WeG = %^WG1 %^WGSH %^CPL %^WG ;		  !!= * @CODE@
 StemCns = b b3 d d3 g g2 g3 h h2 h3 		   !!= * @CODE@ 
           j l m m2 m3 m8 n n8 n2 ŋ r s  ;     !!= * @CODE@ 

Arch = %^RC %^RV %^SV %^SC %^RVD ;                !!= * @CODE@ 
Len = %^RLEN %^LLEN %^SLEN %^CLEN ;    			!!= * @CODE@ 


Dummy = %^CLEN %^CSH %^EE %^FCD %^IA %^ILL %^LLEN %^MONO %^ODDC %^ODDSHV    !!= * @CODE@
        %^RLEN %^RVL %^RVSH %^SFV %^SLEN                     !!=  @CODE@ 
        %^SVF %^SVLOW %^UU %^VLOW %^RVSH %^WG %^ÁE %^ÁI ;  !!=  @CODE@ 


           
!! !!!Rule section

Rules

!! !!Consonant rules

!! !Consonant gradation

"X:x halflong to short gradation"
!! * __@RULENAME@__  mool7â to moolâ
Cx:Cy <=> Vow: _ (%^RC:) Vow (%^SV:) (Cns) (Dummy:*) %^WG:0 ;
	where Cx in (m7 n7 ŋ7 r7 s7 š7 j7 v7 đ7 l7 )
          Cy in (m  n  ŋ  r  s  š  j  v  đ  l  )
		  matched;
		  
!€ mool7^RCâ^WG
!€ mool0â0


"x:y gradation" 
!! * __@RULENAME@__ c to s etc, note that t:đ is in a separate rule
Cx:Cy <=> Vow: _ (%^RC:0) Vow (%^SV:) (Cns) %^WG:0 (%^RLEN:|%^RVSH:) (%^SLEN:) (%^SVLOW:) [%>|.#.] ;
!          Vow: _ k4:h Vow (Cns) (Dummy:*) %^WG:0 ;  ! Revise this one, there is no ack4a : asha
	where Cx in (c č h )
          Cy in (s j̣ ṿ )
		  matched;

!€ käähir^WG
!€ kääṿir0

!€ käähir
!€ käähir

"t:đ gradation" 
!! * __@RULENAME@__   for ito : iđo
t:đ <=> Vow: _ (k4:) (%^RC:) :Vow (%^SV:) (Cns) (Dummy:*) %^WG:0 ;

!€ jo^RVtk4^RCâ^WG^RLEN
!€ joođh0â00

"k:h gradation for kk and tk"
!! * __@RULENAME@__    for atka : ađha
k4:h <=> Vow: [t:|k:] _ (%^RC:) :Vow (%^SV:) (Cns) (Dummy:*) (%^RLEN:) %^WG: ;

!€ mä^RVtk4i^WG
!€ määđhi0

!€ su^RVkk4^RCá^SV^WG^CLEN^SLEN>st
!€ su00hháá000>st



"xx:x gradation"
!! * __@RULENAME@__  tikká:tiká, deleting the first k, etc.
Cx:0 <=> Vow: _ (ˊ:) Cx (%^RC:) Vow: (%^SV:) (Vow) (Cns:) (Dummy:*) %^WG:0  ;
	where Cx in ( b d g p t k c č f z ž l m n ŋ r s š v ) ;

"xˊx:x gradation"
!! * __@RULENAME@__  tikká:tiká, deleting the first k, etc.
ˊ:0 <=> Vow: Cx: _ Cx (%^RC:) Vow: (%^SV:) (Vow) (Cns:) %^WG:0  ;
	where Cx in ( b d g p t k c č f z ž l m n ŋ r s š v ) ;



!"Consonant shortening (not weak grade) final part"
!!! * __@RULENAME@__ pp to p for kappeer ~ kaperist
!Cy:0 <=> Cx: (ˊ:) _  (%^RC:) [ Vow:  ]* (Cns) (Cns) (%^RC:) (%^SFV:) (%^SC:) (%^ÁI:) (%^ÁE:) (%^RLEN:) (%^DLEN:) %^CSH: (%^RVSH:) %>: ;
!       where Cx in ( s v m n ŋ š h l p d k k  h  p  t g r č  ) 
!             Cy in ( s v m n ŋ š h l p d k k4 h4 p4 t g r č4 ) 
!       matched ;



"Consonant shortening (not weak grade) pp:p etc"
!! * __@RULENAME@__ pp to p for kappeer ~ kaperist
Cy:0 <=> Cx (ˊ:) _  (%^RC:) [ Vow:  ]* (Cns) (Cns) (%^RC:) (%^SFV:) (%^SC:) (%^ÁI:) (%^ÁE:) (%^RLEN:) (%^DLEN:) %^CSH: (%^RVSH:) %>: ;
       where Cx in ( s š p d k k  p  t g č  ) 
             Cy in ( s š p d k k4 p4 t g č4 ) 
       matched ;

"Consonant shortening (not weak grade) final part (half-long)"
!! * __@RULENAME@__ pp to p for kappeer ~ kaperist
Cy:0 <=> Cx: (ˊ:) _  (%^RC:) [ Vow:  ]* (Cns) (Cns) (%^RC:) (%^SFV:) (%^SC:) (%^ÁI:) (%^ÁE:) (%^RLEN:) (%^DLEN:) %^CSH: (%^RVSH:) %>: ;
       where Cx in ( v m n ŋ h l h  r ) 
             Cy in ( v m n ŋ h l h4 r ) 
       matched ;

"Consonant shortening (not weak grade) first part (half-long)"
!! * __@RULENAME@__ pp to p for kappeer ~ kaperist
Cx:Cy <=> Vow: _ (ˊ:) Cz:  (%^RC:) [ Vow:  ]* (Cns) (Cns) (%^RC:) (%^SFV:) (%^SC:) (%^ÁI:) (%^ÁE:) (%^RLEN:) (%^DLEN:) %^CSH: (%^RVSH:) %>: ;
       where Cx in ( v m n ŋ h l h  r ) 
             Cy in ( ṿ ṃ ṇ ŋ̣ ḥ ḷ ḥ  ṛ ) 
             Cz in ( v m n ŋ h l h4 r ) 
       matched ;

"Consonant shortening (not weak grade) hyphen"
!! * __@RULENAME@__ pp to p for kappeer ~ kaperist
ˊ:0 <=> Cx _ Cy:  (%^RC:) [ Vow:  ]* (Cns) (Cns) (%^RC:) (%^SFV:) (%^SC:) (%^ÁI:) (%^ÁE:) (%^RLEN:) (%^DLEN:) %^CSH: (%^RVSH:) %>: ;
       where Cx in ( s v m n ŋ š h l p d k k  h  p  t g r č  ) 
             Cy in ( s v m n ŋ š h l p d k k4 h4 p4 t g r č4 ) 
       matched ;

!€ pie^RDgˊg^RCâ^DLEN^CSH>n
!€ pie0g000â00>n


"xx:x gradation 2"
%^RV:ˊ <=> Vow _ Geminate: (ˊ:) Geminate (%^RC:) Vow: (%^SV:) (Vow) (Cns:) (Dummy:*) %^WG:0 [%> | .#.] ;


!€ kopp^RCâ^WG^LLEN>st
!€ ko0p0â00>st


"xx:y long to something else gradation 1" 
!! * __@RULENAME@__   hh:V, kk:h, pp:v, čč:J, deleting first part, k:0 in kk4:h etc
Cx:0 <=> Vow: _ Cy: (%^RC:) Vow: (Vow:) (Cns:) (Dummy:*) %^WG:0 ;
         Vow (%^RV:) _ Cy: (%^RC:) Vow (Dummy:*) %^WG:0 ;
	where Cx in ( h   k  p  č ) 
	      Cy in ( h4  k4 p4 č4 )
		  matched ;

!€ le^RVkk4^RCâ^WG^RLEN
!€ lee0h0â00

"xx:y long to something else gradation 2" 
!! * __@RULENAME@__  hh:V, kk:h, pp:v, čč:J here we change second part, k4:h in kk4:h etc.
Cx:Cy <=> Vow         Cz: _ (%^RC:) Vow: (Vow:) (Cns:) (Dummy:*) %^WG:0 ;
          Vow (%^RV:) Cz: _ (%^RC:) Vow: (Dummy:*) %^WG:0 ;
	where Cx in ( h4  p4 č4 ) 
	      Cy in ( ṿ   v  j̣ ) 
	      Cz in ( h   p  č ) 
		  matched ;

!htest č i ä p:0 p4:v á t ^WG:0 ^FCD:0

"xy:zy gradation"
!! * __@RULENAME@__  ht:vt, we use h4 
Cx:v <=> _ (ˊ:) Cz (%^RC:) Vow (%^SV:) (Cns:) (Dummy:*) %^WG: ;
       where Cx in ( h4 k4 h4 h4 ) 
             Cz in ( t  s  č  c  ) 
       matched ;

!€ liäh4ˊtu^SV^WG^CLEN^SLEN>st
!€ liäv0tu0000>st

!€ pih4tâs^WG
!€ pivtâs0

!€ totk4os^WG
!€ tođ hos0




"xyy:xy gradation A"
!! * __@RULENAME@__  Perhaps merge this with next
Cy:0 <=> :Vow (%^RV:) Cx: _ Cy: (%^RC:) Vow (%^SV:) (Cns) %^WG: ;
      where Cx in ( i4 l l l l l l l m m n n n ŋ r r r r r r r v ) 
            Cy in ( k  c k p s t č š p č c s t k c p k s t č š p ) 
      matched ;

!€ riänttus^WG
!€ riän0tus0

"xyy:xy gradation B"
!! * __@RULENAME@__  this contains i4 pairs
Cy:0 <=> Vow: (%^RV:) Cx: _ Cy: Vow (%^SV:) (Cns) %^WG: ;
	where Cx in ( i4  i4 )
          Cy in ( t   c  ) 
	matched ;


! Old version 
! "xyy:xy gradation A"
! Cy:0 <=> Cx: _ Cy: (%^RC:) Vow (Cns) %^WG: ;
!       where Cx in ( i i l l l l l l m m n n n ŋ r r r r r r v ) 
!             Cy in ( c t c p s t č š p č c s t k c p s t č š p ) 
!       matched ;
! 
! !€ riänttus^WG
! !€ riän0tus0
! 
! "xyy:xy gradation B"
! !! * __@RULENAME@__  
! Cy:0 <=> Vow: (%^RV:) Cx: _ Cy: Vow (%^SV:) (Cns) %^WG: ;
! 	where Cx in ( i4 l n r l m r v i4 l l l l n n r r r r )
!           Cy in ( t  t t t p p p p c  c č s š c s c č s š ) 
! 	matched ;

!€ a^RVi4kk4â^WG
!€ a0i0há0

!€ vieltti^WG
!€ viel0ti0

!"kk:rk gradation"
!k:0 <=> i4: _ k (%^RC:) Vow (Cns) %^WG: ;
 
"xxy:xy gradation for nnj"
!! * __@RULENAME@__  special case
Cx:0 <=> Cx: _ Cy: Vow (%^SV:) (Cns) %^WG: ;
      where Cx in ( n ) 
            Cy in ( j )
      matched ;

!€ koonnjâl^WG
!€ koon0jâl0 


"xyy:xz gradation for k:h 1"
!! * __@RULENAME@__  first k goes to 0
k:0 <=> Vow: (%^RV:) Cx: _ k4: (%^RC:) Vow (%^SV:)  (Cns) %^WG: ;
	where Cx in ( i4 j l r v ) ;

"xyy:xz gradation for k:h 2" 
!! * __@RULENAME@__  second k goes to h
k4:h <=> Vow: (%^RV:) Cx: k: _ (%^RC:) Vow (%^SV:) (Cns) %^WG: ;
	where Cx in ( i4 j l r v  ) ;

"xˊy:xy gradation"
!! => __@RULENAME@__  
ˊ:0 <=> Vow: Cx _ Cy Vow (%^SV:) (Cns) (Dummy:*) %^WG:0 ;
     where Cx in (b b b b h h h h j j j j l l l l l l l l l l l m n n n n n p p p p r r r r r r r r r r r r r r s s s s s s t t v v v v v v v v v v v v v đ đ đ đ đ ŋ š š š š i4 i4 i4 i4 i4 i4 i4 i4 i4 i4 )
           Cy in (d l đ ž l m t č d l m v b d g j m n s v ŋ š ž n d h j z ž c s t č b d f g h j m n r s t v ŋ š k m n p t v k h d g h k j l m n r z đ ŋ ž b f g j m g k m p t b  d  g  l  m  n  r  v  z  ŋ  )
		  matched;

!"xˊy:xy gradation for i4"
!!! * __@RULENAME@__  , this rule deletes the ˊ mark when first consonant is i4
!ˊ:0 <=> Vow: i4: _ Cx Vow (%^SV:) (Cns) (Dummy:*) %^WG:0 ;
!	where Cx in (b  d  g  l  m  n  r  v  z  ŋ ) ;



  
!! !Other Consonant Rules

       
 
!€ kappeer^CSH^RVSH>ist
!€ ka0p0er00>ist

!€ haavvâr^CSH^RVSH>ist
!€ h0a0vâr00>ist

!€ pottáák^RC^CSH^RVSH>ist
!€ pot00ákk00>ist

!€ vinnjooh^CSH^RVSH>ist
!€ vi0nj0oh00>ist

!€ paakkeet^CSH>ân
!€ paa0keet0>ân

!€ nahhaar^CSH>ân
!€ na0h0ar0>ân

"nnj to nj shortening"
!! * __@RULENAME@__  special rule, e.g. konnjâl -> konjâlân
n:0 <=> n _ j Vow (Cns:) %^CSH: %>: ;

!€ konnjâl^CSH>ân
!€ kon0jâl0>ân

 
"Lengthen root consonant after vowel shortening"
!! * __@RULENAME@__  e.g. tt in hamittist
%^RC:Cx <=> Vow Cx _ %^CSH: ;
        where Cx in ( p t k ) ; 

!€ haamit^RC^CSH^RVSH>ist
!€ h0amitt00>ist

!€ ruávást^RC^CSH^RVSH>ist
!€ ruávást000>ist

"Lengthening of half-long root consonant 1"
!! * __@RULENAME@__  for l-dot to ll, changing l7 to first l in ll
Cx:Cy <=> Vow: _ %^RC: :Vow (%^SV:) (%^RVSH:) %^CLEN: (%^SVLOW:) %>:  ;
	where Cx in ( l7 r7 s7 h7 m7 n7 đ7 )
		  Cy in ( l  r  s  h  m  n  đ  ) 
		  matched ;

"Lengthening of half-long root consonant 2"
!! * __@RULENAME@__   for l-dot to ll, changing ^RC to second l in ll
%^RC:Cy <=> Vow: Cx: _ :Vow  (%^SV:) (%^WG:) (%^RVSH:) %^CLEN: (%^SVLOW:) %>: ;
	where Cx in ( l7 r7 s7 h7 m7 n7 đ7 )
		  Cy in ( l  r  s  h  m  n  đ  ) 
		  matched ;


"Lengthening of short root consonant 1"
!! * __@RULENAME@__  for h to vv
Cx:Cy <=> Vow: _ %^RC: :Vow (%^SV:) (%^WG:) (%^RVSH:) %^CLEN: (%^SVLOW:) %>:  ;
	where Cx in (  h )
		  Cy in (  v ) 
		  matched ;

"Lengthening of short root consonant 2"
!! * __@RULENAME@__   for h to vv
%^RC:Cy <=> Vow: Cx: _ :Vow  (%^SV:) (%^WG:) (%^RVSH:) %^CLEN: (%^SVLOW:) %>: ;
	where Cx in (  h )
		  Cy in (  v ) 
		  matched ;


!€ ka^RVss^RCa^SV^WG^CLEN^SLEN>st
!€ ka00ssaa000>st

!"Lengthening of half-long root consonant 2"
!!! * __@RULENAME@__   for l-dot to ll  
!%^RC:Cx <=> Vow :Cx _ Vow  %^CLEN: %>: [n|d] ;
!	where Cx in ( l  r  s  h  m  n  đ  ) ;

!€ kiel7^RCâ^CLEN>n
!€ kiellâ0>n


"Assimilation of root consonant and double suffix consonant"
!! * __@RULENAME@__  delet t in haamit in front of -ttáá, avoid -tttáá
t:0 <=> _ %>: t t ; 

!€ haamit>ttáá
!€ haami0>ttáá


"Consonant lengthening after xx:x weak grade"
!! * __@RULENAME@__  for locative kassaast, which is lengthened weak grade
%^RC:Cx <=> Vow: Cx: Cx _ Vow: (%^SV:) %^WG: (Dummy:) %^CLEN: ;
        where Cx in ( p l d m s g ) ;

!€ ka^RVss^RCa^SV^WG^CLEN^SLEN>st
!€ ka00ssaa000>st



"Consonant lengthening after xx:x weak grade with special consonant on upper side"
!! * __@RULENAME@__  as previous rule, but for k4, č4, p4
%^RC:Cx <=> [:Vow|%^RV:] Cy: Cy: _ Vow: (%^SV:) %^WG: (Dummy:) %^CLEN: ;
        where Cy in ( k4 č4 p4 ) 
              Cx in ( h  j  v  ) 
        matched ;

"Consonant lengthening after x:y weak grade"
!! * __@RULENAME@__  , here we lengthen the lower y consonant, spaha -> spavvaast
%^RC:Cx <=> [:Vow|%^RV:] Cx: _ Vow: (%^SV:) %^WG: (Dummy:) %^CLEN: ;
        where Cx in ( p l d m s ) ;



"Consonant lengthening after x:y weak grade with special consonant on upper side"
!! * __@RULENAME@__  as previous rule, but for k4, č4, p4
%^RC:Cx <=> [:Vow|%^RV:] (Cz:) Cy: _ Vow: (%^SV:) %^WG: (Dummy:) %^CLEN: ;
        where Cy in ( k4 č4 p4 ) 
              Cx in ( h  j  v  ) 
              Cz in ( k  č  p  ) 
        matched ;












"Consonant lengthening after h4 initial weak grade"
!! * __@RULENAME@__  lengthening weak grade of kk4 gives hh
%^RC:Cx <=> h4: Cx _ Vow: (%^SV:) %^WG: (Dummy:) %^CLEN: ;
        where Cx in ( v  č  s  t  c  ) ;

!€ su^RVkk4^RCá^SV^WG^CLEN^SLEN>st
!€ su00hháá000>st

!€ kopp^RCâ^WG^CLEN%^SVN>in
!€ ko0ppá00>in


!! !Other consonant rules

"Word final consonant deletion of n m t"                 
!! * __@RULENAME@__ for vaskâm:vaaskâ
Cx:0 <=> _ (%^WG:) %^FCD: ;      
         where Cx in (n m t) ;

!€ va^RVskâm^WG^FCD
!€ vaaskâ000
	
 


!! !!Vowel rules

!! !First syllable rules
 
"Vowel shortening with consonant shortening" 
!! * __@RULENAME@__  for koonjâl -> konjâlân
Vx:0 <=> _ Vx Seg:* ([%^RC:|%^SC:]) %^CSH: (Dummy:*) %>: ;
        where Vx in ( a e o á ä u y i ) ;

!  ([%^RC:|%^SC:])  was earlier (Dummy:*), but we changed to avoid conflict

!€ koonnjâl^CSH>ân
!€ k0on0jâl0>ân

!€ kappeer^CSH^RVSH>ist
!€ ka0p0er00>ist

!€ čäällim^CSH^RVSH>ist
!€ č0ä0lim00>ist

!€ muusik^RC^CSH^RVSH>ist
!€ m0usikk00>ist


! kahhaan^SC^CSH^RVSH>ist
! ka0ha0n0j00>ist

"Vowel shortening (no consonant shortening) in consonant stems"
!! * __@RULENAME@__ kiirrâs- to kirrâsân
Vy:0 <=> _ Vx   Cns: (Cns:) (%^RC:) Vow :Cns (%^SFV:) (%^SC:) (%^ÁI:) (%^ÁE:) %^RVSH: %>: ;
       where Vx in ( a e i o u á ä ) 
             Vy in ( a e i o u á ä ) 
       matched ;

!€ kiirrâs^RVSH>ân
!€ ki0rrâs0>ân
 
"Vowel shortening (no consonant shortening) in vowel stems"
!! * __@RULENAME@__ (example?)
Vy:ˊ <=> Vx _  Cns: (Cns:) (%^RC:) Vow (%^WG:) (%^SFV:) (%^SC:) (%^ÁI:) (%^ÁE:) %^RVSH: %>: ;
       where Vx in ( a e i o u y á ä ) 
             Vy in ( a e i o u y á ä ) 
       matched ;

!€ mool7^RCâ^WG^RVSH>ttáá
!€ moˊl0â00>ttáá



"Root vowel lenghtening in bisyllabic stems"
!! * __@RULENAME@__  lekkâ : leehá-
%^RV:Vx <=> Vx _ Cns:* (%^RC:) Vow: (%^SV:) (%^WG:) %^RLEN: ;
	where Vx in ( a e i o u y) ;

!€ le^RVkk4^RCâ^WG^RLEN
!€ lee0h0â00

"Root vowel change for á to ä with i in second syllable"
!! * __@RULENAME@__  päävir
á:ä <=>    _ á: Cns:* :i Cns: %^ÁI: [.#.|%>:] ;
        á: _    Cns:* :i Cns: %^ÁI: [.#.|%>:] ;

!€ páápp4ár^ÁI^WG
!€ pää0vir00

"Monophthongisation rule 1"
!! * __@RULENAME@__  u:o in pairs like kuátij -> koođij
!Vx:Vy <=> _ Vz: Cns:* i %>: j ;
Vx:Vy <=> _ Vz: Cns:* i %^WG: %>: j ;
	where Vx in ( i u ä )
		  Vy in ( e o a )
		  Vz in ( ä á ä )
	matched ;

!€ kuáti^WG>j
!€ koođi0>j

"Monophthongisation rule 2"
!! * __@RULENAME@__  á:o in pairs like kuátij -> koođij 
Vx:Vy <=> Vz: _ Cns:* i %^WG: %>: j ;
	where Vx in ( ä á ä )
		  Vy in ( e o a )
		  Vz in ( i u ä )
		  matched ;

!nom	ill
!e^RV	iä
!ie	iä
!ä	á
!ye	uá


"e to iä in Illative and Sg3 1"
!! * __@RULENAME@__  Part 1: e to i
e:i <=> _ %^RV: Cns:+ Vow: %^ILL: ;

"e to iä in Illative and Sg3 2"
!! * __@RULENAME@__  Part 2: ^RV to ä
%^RV:ä <=> e:i _ Cns:+ Vow: %^ILL: ;

"ie to iä in Illative and Sg3"
!! * __@RULENAME@__  ... with ^ILL as trigger
e:ä <=> i _  Cns:+ Vow: %^ILL: ;

"ä to á in Illative and Sg3"
!! * __@RULENAME@__  ... after .#. or Cns, with ^ILL as trigger
ä:á <=> [.#.|Cns] _  Cns:+ Vow: %^ILL: ;

"ye to uá in Illative and Sg3 1"
!! * __@RULENAME@__  Part 1: y to o
y:u <=> _ e:  Cns:+ Vow: %^ILL: ;

"ye to uá in Illative and Sg3 2"
!! * __@RULENAME@__  Part 2: e to á
e:á <=> y: _  Cns:+ Vow: %^ILL: ;


!! !Second syllable rules

"Vowel change á to e or i in 3syll"
!! * __@RULENAME@__ puttás- > putes, triggers are ^ÁE and ^ÁI
Vx:Vy <=> _ (Cns:) Vz: %^WG: ; 
       where Vx in ( á    á    a   )
             Vy in ( e    i    e   )
             Vz in ( %^ÁE %^ÁI %^ÁE) 
       matched ;

!€ puttás^ÁE^WG
!€ pu0tes00

"Vowel shortening  áá and to e or i in 3syll"
!! * __@RULENAME@__ puttás- > putes, triggers are ^ÁE and ^ÁI
Vx:0 <=> _ Vx: (Cns:) Vz: [%^WG:|%^CSH:] ; 
       where Vx in ( á    á    a   )
             Vz in ( %^ÁE %^ÁI %^ÁE) 
       matched ;

!€ nahh4aar^ÁE^WG
!€ na0ṿ0er00

"Suffix vowel lengthening"
!! * __@RULENAME@__ long á in kissáást
%^SV:Vx <=> Vx       _ Dummy:* (:Cns)                  %^SLEN: ;
        where Vx in ( á o e a i ) ; ! pending...

!€ ki^RVss^RCá^WG^CLEN^SV^SLEN>st
!€ ki00ssá00á0>st

!€ mi^RVll^RCo^WG^CLEN^SV^SLEN>st
!€ mi00llo00o0>st

!€ huksi^SVm^SLEN>ist
!€ huksiim0>ist


"Fleeting vowel before suffix"
!! * __@RULENAME@__ deletes -i- in piehâin to piehânjist 
i:0 <=> _ Cns %^SFV: (%^SC:) (%^CSH:) (%^RVSH:) %>: ;

!€ pieˊhâin^SFV^SC^CSH^RVSH>ist
!€ pie0hâ0n0j00>ist

"Inversion of in to nj"
!! * __@RULENAME@__  adds -j-  in piehâin to piehânjist  
%^SC:j <=> n (%^SFV:) _ (%^CSH:) (%^RVSH:) %>: ; 

!€ pieˊhâin^SFV^SC^CSH^RVSH>ist
!€ pie0hâ0n0j00>ist

!€ kahhaan^SC^CSH^RVSH>ist
!€ ka0ha0nj00>ist



"Stem vowel e deletion before 2nd syllable ij"
!! * __@RULENAME@__  hmm have a look at this
!e:0 <=> Cns: _ (Dummy:) (Dummy:) %>: i j ; unclear target !?
e:0 <=> Cns: _ Cns %^SFV: (%^SC:) (%^CSH:) (%^RVSH:) %>: ; 

!€ šoddâdem^SFV>ist
!€ šoddâd0m0>ist

 
"Stem vowel e to a for a root vowel."
!! * __@RULENAME@__  alge to aalgan
e:a <=> a (%^RV:) Cns:+ _ (%^RLEN:) (%^CSH:) %^ILL: ;
!€ a^RVlge^SLEN>n
!€ aalga0>n

"Stem vowel e to á for other root vowel."
!! * __@RULENAME@__  
e:á <=> [o|i|u] (%^RV:) Cns:+ _ (%^RLEN:) (%^CSH:) %^ILL: %>: ;




"Stem vowel â to a in Pl Nom -h"
!! * __@RULENAME@__  silbâ to siilbah
â:a <=> :Cns (%^RC:) _ (%^UU:|%^SV:) (%^WG:) (%^RLEN:|%^DLEN:) %> h ;



!€ so^RVll^RCâ^WG^RLEN>h
!€ soo0l0a00>h

"Stem vowel â > á change before i"
!! * __@RULENAME@__ sollâ to sooláid 
â:á <=> _ (%^UU:|%^SV:) (%^WG:) (%^RLEN:|%^CLEN:) %^SVLOW:  ; 

!€ so^RVll^RCâ^WG^RLEN^SVLOW>in 
!€ soo00lá000>in

!€ so^RVll^RCâ^WG^CLEN^SVLOW>in
!€ so00llá000>in

"Stem vowel u > o change before i"
!! * __@RULENAME@__  ... check this, add test
u:o <=> _ (%^UU:|%^SV:) (%^WG:) (%^RLEN:|%^CLEN:) %^SVLOW:  ; 
! Does not work for cases u>o



"Illative suffix change in bisyllabic e stems"
!! * __@RULENAME@__  changes ^A to a, check this
%^A:a <=> a (%^RV:) Cns:* e: (Dummy:*) %>: _ ;



!! !!Other rules

!! (no rules here now)
