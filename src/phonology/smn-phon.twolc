! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@hum.uit.no or divvun@samediggi.no

!! !!!Alphabet 

Alphabet   

!! The Inari Saami letters
 a á â ä b c d e f g h i j k l m n o õ p q !!= * @CODE@
 r s t u v w x y z æ ä ø ö å			   !!= * @CODE@
 č đ ŋ ŧ š ž				 			   !!= * @CODE@

 A Á Â Å B C D E F G H I J K L M N O Õ P Q !!= * @CODE@
 R S T U V W X Y Z Æ Ä Ø Ö Å 			   !!= * @CODE@
 Č Đ Ŋ Ŧ Š Ž  							   !!= * @CODE@
 ˊ  %- 							   !!= * @CODE@
 ':0   !!= @CODE@ this to zero

!! Accented letters, just in case

 É Ó Ú Í À È Ò Ù Ì Ë Ü Ï Ê Ô Û Î Ã Ý þ Ð   !!= * @CODE@
 é ó ú í à è ò ù ì ë ü ï ê ô û î ã ý þ ð   !!= * @CODE@
 ß ª ß ç								   !!= * @CODE@
 
!! Literal quotes and angles must be escaped (cf morpheme boundaries further down):
 »7     !! * »
 «7     !! * «
 %[%>%] !! * >
 %[%<%] !! * <



!! Different archiphonemes

  m7:ṃ n7:ṇ ŋ7:ŋ̣ s7:ṣ r7:ṛ đ7:đ̣ l7:ḷ j7:j̣ h7:ḥ š7:ṣ̌ !!= * @CODE@  with dots
  v7:ṿ 
  h8:h g8:g m8:m n8:n t8:t				   !!= * @CODE@	to be documented
  k2:k	m9:m							   !!= * @CODE@ to be documented
  p4:p ! pääpp4ir
%^P:p %^K:k %^Č:č %^H:h %^T:t              !!= * @CODE@
 
!! Different triggers

!! !! 2014
%^WG:0 		!!= * @CODE@ weak grade
%^RV:0	 	!!= * @CODE@ root vowel
%^SV:0 		!!= * @CODE@ stem vowel
%^RC:0		!!= * @CODE@ root consonant
%^SC:0          !!= * @CODE@ suffix consonant
%^RLEN:0    !!= * @CODE@ root lengthening
%^LLEN:0    !!= * @CODE@ low vow lengthening
%^SLEN:0    !!= * @CODE@ hmm lengthening
%^CLEN:0	!!= * @CODE@ cons lengthening
%^RVL:0     !!= * @CODE@ root vow length
%^CSH:0     !!= * @CODE@ cons shortening
%^LSH:0     !!= * @CODE@ low vow shortening
%^RVSH:0	!!= * @CODE@ root vow shortening
%^DIPH:0    !!= * @CODE@ diphthongisation
%^IA:0      !!= * @CODE@ i to á (more)
%^FCD:0     !!= * @CODE@  Final consonant deletion
%^EE:0      !!= * @CODE@  Final vowel deletion in ee stems
%^UU:0      !!= * @CODE@  Final vowel deletion in uu stems
 ¥:0        !!= * @CODE@ for Vowel lengthening, to be deleted


!! !! ... 2013 , these are old, and kept while awaiting a revision

%^CPL:0 			     !!= * @CODE@
%^DIPH:0 			     !!= * @CODE@
%^IA:0			     	 !!= * @CODE@
%^ILL:0 				 !!= * @CODE@
%^ODDC:0				 !!= * @CODE@ shorten cns in odd-syll stems before C, #
%^ODDLV:0				 !!= * @CODE@
%^ODDSHV:0				 !!= * @CODE@
%^SCPL:0 		    	 !!= * @CODE@
%^SHV:0 				 !!= * @CODE@
%^VLOW:0   				 !!= * @CODE@
%^WGSH:0       			 !!= * @CODE@
%^XST:0 			     !!= * @CODE@
%^SFV:0


!! !!Morpheme boundaries:

!! Here we define the suffix border >
!! The other borders are not used yet, but still defined:

 «  !!≈ ;@CODE@: Derivational prefix
 »  !!≈ ;@CODE@: Derivational suffix
 %< !!≈ ;@CODE@: Inflectional prefx
 %> !!≈ ;@CODE@: Inflectional suffix
 %^ !!≈ ;@CODE@: (exceptional) soft hyphenation point
 #  !! and the symbol #, which is Word boundary for both lexicalised and dynamic compounds

!! End of alphabet definitions

;

!! !!! Sets

Sets
 Vow = a á â ä e i o u y æ ø ö å			   !!= * @CODE@ 
       é ó ú í à è ò ù ì ë ü ï ê ô û î ã ý 	   !!= @CODE@ 
       A Á Â Ä E I O U Y Æ Ø Ö Å			   !!= @CODE@ 
       É Ó Ú Í À È Ò Ú Ì Ë Ü Ï Ê Ô Û Î Ã Ý 	   !!= @CODE@ 
       ¥ ;									   !!= @CODE@ 
 Cns = b c č d đ f g h j k l m n ŋ 			   !!= * @CODE@ 
       p q r s š t ŧ v w x z ž				   !!= @CODE@ 
       B C Č D Đ F G H J K L M N Ŋ			   !!= @CODE@ 
       P Q R S Š T Ŧ V W X Z Ž 				   !!= @CODE@ 
       ht g2 k2 m2 n2 							   !!= @CODE@ 
       b3 d3 g3 m3 h3 						   !!= @CODE@ 
       m7 n7 ŋ7 v7 s7 r7 đ7	l7 j7 h7 š7		   !!= @CODE@ 
       ṃ  ṇ  ŋ̣  ṿ  ṣ  ṛ  đ̣  ḷ  j̣  ḥ  ṣ̌         !!= * @CODE@
       p4

       m8 n8 t8				                   !!=* @CODE@ 
       %^P %^K %^Č %^H %^T ;                   !!= * @CODE@ 
 Seg = Vow Cns ;							   !!= * @CODE@ 
 WeG = %^WG1 %^WGSH %^CPL %^WG ;		  
 StemCns = b b3 d d3 g g2 g3 h h2 h3 		   !!= * @CODE@ 
           j l m m2 m3 m8 n n8 n2 ŋ r s  ;     !!= * @CODE@ 

Arch = %^WG %^RC %^RV %^SV %^RVL %^EE %^UU %^RVSH %^DIPH  ;    !!= * @CODE@ 
Len = %^RLEN %^LLEN %^SLEN %^CLEN ;    !!= * @CODE@ 

Dummy = Arch Len %^ODDC ;    !!= * @CODE@ 
           
!! !!!Rule section

Rules

!! !!Consonant rules

!! !Consonant gradation

"X:x halflong to short gradation"
Cx:Cy <=> Vow _ Vow (Cns) (Dummy:) %^WG:0 ;
	where Cx in (m7 n7 ŋ7 r7 s7 š7 j7 v7 đ7 l7 )
		  Cy in (m  n  ŋ  r  s  š  j  v  đ  l  )
		  matched;

"x:y gradation"
Cx:Cy <=> Vow _ Vow (Cns) (Dummy:) %^WG:0 ;
	where Cx in (c č h p4 t)
              Cy in (s j̣ ṿ v  đ)
		  matched;

!€ käähir^WG
!€ kääṿir0
!€

!€ käähir
!€ käähir

!"xx:x gradation"
!Cx:0 <=> Vow _  Cx: Vow (Cns) (Dummy:) %^WG:0 ;
!	where Cx in (b d g p t k c č f l z ž ) ;

!"xx:X long to halflong gradation 1"
!Cx:0 <=> Vow _ Cx: Vow (Cns) (Dummy:) %^WG:0 ;
!	where Cx in (l m n ŋ r s v ) ;
!
!"xx:X long to halflong gradation 2"
!Cx:Cy <=> Vow Cx: _ Vow (Cns) (Dummy:) %^WG:0 ;
!	where Cx in (l m n ŋ r s v  ) 
!		  Cy in (ḷ ṃ ṇ ŋ̣ ṛ ṣ ṿ  )
!		  matched ;

"xx:y long to halflong gradation 1" ! hh:V, kk:h, pp:v, čč:J
Cx:0 <=> Vow _ Cy: Vow (Cns) (Dummy:) %^WG:0 ;
	where Cx in ( h  k p  č ) 
	      Cy in ( h  k p4 č )
		  matched ;

!€ pääpp4ir^DIPH^WG
!€ pää0 vir00
!htest

"xx:y long to halflong gradation 2" ! hh:V, kk:h, pp:v, čč:J
Cx:Cy <=> Vow Cz: _ Vow (Cns) (Dummy:) %^WG:0 ;
	where Cx in ( h  k p4 č ) 
	      Cy in ( v7 h v j7 ) 
	      Cz in ( h k p č ) 
		  matched ;

!€ pääpp4ir^DIPH^WG
!€ pää0 vir00
!htest p ä ä p:0 p4:v i r ^DIPH:0 ^WG:0

!! !Consonant shortening
       
"Consonant shortening (not weak grade)"
!!! __@RULENAME@__ pp to p for kappeer ~ kaperist
Cx:0 <=> _ Cx  [ Vow:  ]* Cns (%^RC:) (%^SC:) %^CSH: (%^RVSH:) %>: ;
         _ n j  [ Vow:  ]* Cns (%^RC:) (%^SC:) %^CSH: (%^RVSH:) %>: ;    !   /!\ RISKY /!\
       where Cx in ( p b s t k c č d g z ž v l m n ŋ r š h ) ;

!€ kappeer^CSH^RVSH>ist
!€ ka0p0er000ist
!htest k a p:0 p e:0 e r ^CSH:0 ^RVSH:0 >:0 i s t

!€ haavvâr^CSH^RVSH>ist
!€ h0a0vâr000ist
!htest h a:0 a v:0 v â r ^CSH:0 ^RVSH:0 >:0 i s t

!€ pottáák^RC^CSH^RVSH>ist
!€ pot00ákk000ist
!htest p o t t:0 á:0 k ^RC:k ^CSH:0 ^RVSH:0 >:0 i s t 

!€ vinnjooh^CSH^RVSH>ist
!€ vi0nj0oh000ist
!htest v i n:0 n j o:0 o h ^CSH:0 ^RVSH:0 >:0 i s t 

"Vowel shortening"
!! __@RULENAME@__ e to 0 for kappeer ~ kaperist
Vx:0 <=>  _ Vx Cns (%^RC:) (%^SC:) (%^CSH:) %^RVSH: %>: ;
          _ Vx Seg:* (%^RC:) (%^SC:) (%^CSH:) %^RVSH: %>: ; 
    where Vx in ( a e o á ä u y i ) ;

!€ kappeer^CSH^RVSH>ist
!€ ka0p0er000ist
!htest k a p:0 p e:0 e r ^CSH:0 ^RVSH:0 >:0 i s t

!€ čäällim^CSH^RVSH>ist
!€ č0ä0lim000ist
!htest č ä:0 ä l:0 l i m ^CSH:0 ^RVSH:0 >:0 i s t

!€ muusik^RC^CSH^RVSH>ist
!€ m0usikk000ist
!htest m u:0 u s i k ^RC:k ^CSH:0 ^RVSH:0 >:0 i s t

!€ kahhaan^SC^CSH^RVSH>ist
!€ ka0ha0n0j000ist
!htest

"Suffix vowel lengthening"
!! __@RULENAME@__ long á in kissáást
%^SV:Vx <=> Vx       _ Dummy:* Cns                  %^SLEN: ;
        where Vx in ( á o e a i ) ; ! pending...

!€ ki^RVss^RCá^WG^CLEN^SV^SLEN>st
!€ ki00ssá00á00st

!€ mi^RVll^RCo^WG^CLEN^SV^SLEN>st
!€ mi00llo00o00st

!€ huksi^SVm^SLEN>ist
!€ huksiim00ist

!htest k i ^RV:0 s:0 s ^RC:s á ^WG:0 ^CLEN:0 ^SV:á ^SLEN:0 >:0 s t
!htest m i ^RV:0 l:0 l ^RC:0 o ^WG:0 ^CLEN:0 ^SV:o ^SLEN:0 >:0 s t
!htest h u k s i ^SV:i m ^SLEN:0 >:0 i s t

"Fleeting vowel before suffix"
Vx:0 <=> _ Cns %^SFV: %>: ;
         _ Cns %^SFV: (%^SC:) (%^CSH:) (%^RVSH:) %>: ;
        where Vx in ( e i ) ;

!€ šoddâdem^SFV>ist
!€ šoddâd0m00ist
!htest š o d d â d e:0 m ^SFV:0 >:0 i s t

!€ pieˊhâin^SFV^SC^CSH^RVSH>ist
!€ pie0hâ0n0j000ist
!htest p i e ˊ:0 h â i:0 n ^SFV:0 ^SC:j ^CSH:0 ^RVSH:0 >:0 i s t


"Lengthen root consonant after vowel shortening"
%^RC:Cx <=> Vow Cx _ %^CSH: ;
        where Cx in ( p t k ) ; 

!€ haamit^RC^CSH^RVSH>ist
!€ h0amitt000ist
!htest h a:0 a m i t ^RC:t ^CSH:0 ^RVSH:0 >:0 i s t

!€ ruávást^RC^CSH^RVSH>ist
!€ ruávást0000ist
!htest r u á v á s t ^RC:0 ^CSH:0 ^RVSH:0 >:0 i s t

"Assimilation of root consonant and double suffix consonant"
t:0 <=> _ %>: t t ; 

!€ haamit>ttáá
!€ haami00ttáá

!htest h a a m i t:0 >:0 t t á á 

"Inversion of 'in' to 'nj'"
%^SC:j <=> n (%^SFV:) _ (%^CSH:) (%^RVSH:) %>: ; 

!€ pieˊhâin^SFV^SC^CSH^RVSH>ist
!€ pie0hâ0n0j000ist

!htest p i e ˊ:0 h â i:0 n ^SFV:0 ^SC:j ^CSH:0 ^RVSH:0 >:0 i s t

!€ kahhaan^SC^CSH^RVSH>ist
!€ ka0ha0n0j000ist
!htest
