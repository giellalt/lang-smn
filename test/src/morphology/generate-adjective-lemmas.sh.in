#!/bin/bash
# @configure_input@

# Automake interprets the exit status as follows:
# - an exit status of 0 will denote a success
# - an exit status of 77 a skipped test
# - an exit status of 99 a hard error
# - any other exit status will denote a failure.

# To run this test script only, do:
#
# make check TESTS=generate-adjective-lemmas.sh

# This test script will test that all noun lemmas do generate as themselves.
# Extend as needed, and copy to new files to adapt to other parts of speech.
# The changes usually needed are:
#
# 1. change the reference to the source file (line 23)
# 2. extend the extract lemmas egrep expression (lines 53 ff)
# 3. adapt the tag addition and lemma generation instructions (lines 79 ff)

###### Variables: #######
### in ###
source_file=${srcdir}/../../../src/morphology/stems/adjectives.lexc
generator_file=./../../../src/generator-gt-norm

### out ###
lemmas=./filtered-adjectives
suplemmas=./superlative-adjectives
attrlemmas=./attribute-adjectives
alllemmas=./all_lemma-adjectives
generated_lemmas=./generated-adjectives
result_file=./missing_adjective_lemmas.txt

# FAIL if source file does not exist:
if [ ! -f $sourcefile ]; then
    echo
    echo "*** Warning: Source file $sourcefile not found."
    echo
    exit 77
fi

# Use autotools mechanisms to only run the configured fst types in the tests:
fsttype=
@CAN_HFST_TRUE@fsttype="$fsttype hfst"
@CAN_XFST_TRUE@fsttype="$fsttype xfst"

# Exit if both hfst and xerox have been shut off:
if test -z "$fsttype" ; then
    echo "All transducer types have been shut off at configure time."
    echo "Nothing to test. Skipping."
    exit 77
fi

# Get external Mac editor for viewing failed results from configure:
EXTEDITOR=@SEE@

##### Extract lemmas #####
### don't use extract-lemmas.sh ### Why???
# Hent ut lemmaer fra adjective.lexc, bortsett fra utkommmenterte (^\!), 
# dem som krever sammensetning (CmpN/Only|ShCmp|RCmpnd| Rreal | R | Rnoun),
# Err/Lex (som blir filtrert bort fra normgenerator). Lemmaene lagres som filtered-adjectives

#grep ";" $source_file | \
#  egrep -v "^(\!|\@|<)" | \
#  egrep -v '(CmpN/Only|ShCmp|RCmpnd| Rreal | R | SUP| Rnoun |\+V\+|\+Err\/Lex)' | \
#  sed 's/% /€/g' | sed 's/%:/¢/g' |  tr ":+" " " | cut -d " " -f1 | \
#  tr -d "%" | tr "€" " " | tr "¢" ":" | sort -u > $lemmas

@GTCORE@/scripts/extract-lemmas.sh \
  --exclude '(CmpN/Only|ShCmp|RCmpnd| Rreal | R | SUP| Rnoun |\+V\+)' \
    $source_file > $lemmas

#grep ";" $source_file | \
#  egrep -v "^(\!|\@|<)" | \
#  egrep  " SUP" | \
#  egrep -v '(CmpN/Only|ShCmp|RCmpnd| Rreal | R | Rnoun |\+V\+|\+Err\/Lex)' | \
#  sed 's/% /€/g' | sed 's/%:/¢/g' |  tr ":+" " " | cut -d " " -f1 | \
#  tr -d "%" | tr "€" " " | tr "¢" ":" | sort -u > $suplemmas

@GTCORE@/scripts/extract-lemmas.sh \
  --include ' SUP' \
  --exclude '(CmpN/Only|ShCmp|RCmpnd| Rreal | R | Rnoun |\+V\+)' \
    $source_file > $suplemmas

#grep ";" $source_file | \
#  egrep -v "^(\!|\@|<)" | \
#  egrep  " ATTR" | \
#  egrep -v '(CmpN/Only|ShCmp|RCmpnd| Rreal | R | Rnoun |\+V\+|\+Err\/Lex)' | \
#  sed 's/% /€/g' | sed 's/%:/¢/g' |  tr ":+" " " | cut -d " " -f1 | \
#  tr -d "%" | tr "€" " " | tr "¢" ":" | sort -u > $attrlemmas

@GTCORE@/scripts/extract-lemmas.sh \
  --include ' ATTR' \
  --exclude '(CmpN/Only|ShCmp|RCmpnd| Rreal | R | Rnoun |\+V\+)' \
    $source_file > $attrlemmas

# evt. denne, sjekk skilnaden:
# @GTCORE@/scripts/extract-lemmas.sh \
#   --exclude '(pattern)' \
#   --include '(pattern)' \
# 	$sourcefile > $lemmas
#
# Skriptet fjernar alltid desse, dvs at ein treng ikkje spesifisera dei:
#
# (LEXICON| K |ENDLEX|\+Err\/Lex)


###### Start testing: #######
transducer_found=0
Fail=0

# The script tests both Xerox and Hfst transducers if available:
for f in $fsttype; do
	if [ $f == "xfst" ]; then
		lookuptool="@LOOKUP@ -q -flags mbTT"
		suffix="xfst"
	elif [ $f == "hfst" ]; then
		lookuptool="@HFST_LOOKUP@ -q"
		suffix="hfstol"
	else
	    Fail=1
		printf "ERROR: Unknown fst type! "
	    echo "$f - FAIL"
	    continue
	fi
#	echo "$generator_file.$suffix"
	if [ -f "$generator_file.$suffix" ]; then
		let "transducer_found += 1"

###### Test non-comopunds: #######
		# generate nouns in Singular, extract the resulting generated lemma,
		# store it:
# Generer lemmaer i adjectives med +A+Sg+Nom, lagre i generated-adjectives
        sed 's/$/+A+Sg+Nom/' $lemmas | $lookuptool $generator_file.$suffix | \
          cut -f2 | grep -v "A+" | grep -v "^$" | sort -u > $generated_lemmas.$f.txt		

# Generer lemmaer i adjectives med +A+Superl+Sg+Nom, lagre i generated-adjectives
        sed 's/$/+A+Superl+Sg+Nom/' $suplemmas | $lookuptool $generator_file.$suffix | \
          cut -f2 | grep -v "A+" | grep -v "^$" | sort -u >> $generated_lemmas.$f.txt		

# Generer lemmaer i adjectives med +A+Attr, lagre i generated-adjectives
        sed 's/$/+A+Attr/' $attrlemmas | $lookuptool $generator_file.$suffix | \
          cut -f2 | grep -v "A+" | grep -v "^$" | sort -u >> $generated_lemmas.$f.txt		

		

###### Collect results: #######
		# Sort and compare original input with resulting output - the diff is
		# stored and opened in SEE:

# Sorter, unifiser
        cat $lemmas $attrlemmas $suplemmas  > $alllemmas
		sort -u -o $alllemmas $alllemmas 
		sort -u -o $generated_lemmas.$f.txt $generated_lemmas.$f.txt 

# Sammenlikne: Former som er i lemmalista med ikke i lista med genererte former,
# lagre i missingadjectiveLemmas.txt. Formene generes med  +A+Sg+Nom for enklere debugging.
		comm -23 $alllemmas $generated_lemmas.$f.txt |\
		grep -v '^$' | sed 's/$/+A+Sg+Nom/' |\
		$lookuptool $generator_file.$suffix > $result_file.$f.txt

		# Open the diff file in SubEthaEdit (if there is a diff):
		if [ -s $result_file.$f.txt ]; then
			# Only open the failed lemmas in see if @SEE@ is defined:
			if [ "$EXTEDITOR" ]; then
				$EXTEDITOR $result_file.$f.txt
			fi
		    Fail=1
		    echo "$f - FAIL"
		    continue
		fi
	    echo "$f - PASS"
	fi
done

# When done, remove the generated data file:
rm -f $lemmas $attrlemmas $suplemmas $alllemmas

# At least one of the Xerox or HFST tests failed:
if [ "$Fail" = "1" ]; then
	exit 1
fi

if [ $transducer_found -eq 0 ]; then
    echo ERROR: No transducer found
    exit 77
fi
